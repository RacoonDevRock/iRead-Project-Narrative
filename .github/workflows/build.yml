name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      bd:
        image: mysql:8.0
        ports:
          - 3307:3306
        env:
          MYSQL_ROOT_PASSWORD: 129837465lg
          MYSQL_DATABASE: iread_db
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysql -h "localhost" -P "3307" --protocol=tcp -u"root" -p"129837465lg" -e "SELECT 1" &> /dev/null; then
              echo "MySQL is up"
              break
            fi
            echo 'MySQL is unavailable - sleeping'
            sleep 1
          done
          if [ "$i" = 0 ]; then
            echo "MySQL did not become available in time" >&2
            exit 1
          fi
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=RacoonDevRock_iRead-Project-Narrative
        working-directory: ./iRead-Project-Narrative-backend
